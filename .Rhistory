}
for (r in 1:300) {
print(as.numeric(mean.scores[r,1:2]));
#  if (var(as.numeric(mean.scores[r, 1:2]) == 0)) {
#    pvalues <- c(pvalues, NA);
#    next;
#  }
#  ttest <- t.test(mean.scores[r, 1:2]);
}
for (r in 1:300) {
print(mean.scores[r,1:2]);
#  if (var(as.numeric(mean.scores[r, 1:2]) == 0)) {
#    pvalues <- c(pvalues, NA);
#    next;
#  }
#  ttest <- t.test(mean.scores[r, 1:2]);
}
pvalues <- c()
for (r in 1:300) {
print(mean.scores[r,1:2]);
#  if (var(as.numeric(mean.scores[r, 1:2]) == 0)) {
#    pvalues <- c(pvalues, NA);
#    next;
#  }
#  ttest <- t.test(mean.scores[r, 1:2]);
}
# 6.
mean.scores$p_value <- t.test(c(mean.scores$"mean alzheimer"), mean.scores$"mean control")$p.value
mean.scores
# 1. Read expression data into a data frame
alz.expr.data <- read.csv("alz_expr_data.csv");
genes <- alz.expr.data$X;
library("tidyverse")
# 1. Read expression data into a data frame
alz.expr.data <- read.csv("alz_expr_data.csv");
genes <- alz.expr.data$X;
temp <- alz.expr.data[,-1];
rownames(temp) <- alz.expr.data[,1];
alz.expr.data <- as.data.frame(temp);
samples <- colnames(alz.expr.data);
# 2.
# 2.1
norm.expr.data <- apply(X = alz.expr.data[1:300,], MARGIN=1, FUN=scale);
boxplot(norm.expr.data, col="cyan");
# 2.2
log2.expr.data <- apply(X = alz.expr.data[1:300,], MARGIN=1, FUN=log2);
boxplot(log2.expr.data, col="pink");
# 2.3
minmax.expr.data <- apply(alz.expr.data[1:300,], 1, function(x) {
(x - min(x)) / (max(x) - min(x))
});
boxplot(minmax.expr.data, col="yellow")
# 3.
heatmap.data <- head(log2.expr.data, 50);
heatmap(as.matrix(heatmap.data));
# 4.
alz.condition.data <- read.table("alz_condition.csv", header = TRUE);
condition <- as.vector(alz.condition.data[,1]);
log2.expr.cond.data <- add_column(as.data.frame(log2.expr.data), condition=condition, .before=1)
# 5.
log2.expr.control <- log2.expr.cond.data[log2.expr.cond.data$condition == "control",-1];
log2.expr.disease <- log2.expr.cond.data[log2.expr.cond.data$condition == "alzheimer",-1];
control.mean.scores <- as.data.frame(apply(log2.expr.control[,1:300], MARGIN=2, mean));
colnames(control.mean.scores) <- "mean control";
disease.mean.scores <- as.data.frame(apply(log2.expr.disease[,1:300], MARGIN=2, mean));
colnames(disease.mean.scores) <- "mean alzheimer";
mean.scores <- cbind(control.mean.scores, disease.mean.scores);
mean.scores$log2FC <- mean.scores$"mean alzheimer" - mean.scores$"mean control"
mean.scores[1:300,-3]
# 6.
mean.scores$p_value <- t.test(c(mean.scores$"mean alzheimer"), mean.scores$"mean control")$p.value
pvalues <- c()
for (r in 1:300) {
print(mean.scores[r,1:2]);
#  if (var(as.numeric(mean.scores[r, 1:2]) == 0)) {
#    pvalues <- c(pvalues, NA);
#    next;
#  }
#  ttest <- t.test(mean.scores[r, 1:2]);
}
mean.scores <- cbind(control.mean.scores, disease.mean.scores);
mean.scores$log2FC <- mean.scores$"mean alzheimer" - mean.scores$"mean control"
for (r in 1:300) {
print(mean.scores[r,1:2]);
if (var(as.numeric(mean.scores[r, 1:2]) == 0)) {
pvalues <- c(pvalues, NA);
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
}
for (r in 1:300) {
print(r);
if (var(as.numeric(mean.scores[r, 1:2]) == 0)) {
pvalues <- c(pvalues, NA);
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
}
View(mean.scores)
for (r in 1:300) {
print(var(as.numeric(mean.scores[r, 1:2]));
for (r in 1:300) {
print(r);
if (var(as.numeric(mean.scores[r, 1:2]) == 0)) {
pvalues <- c(pvalues, NA);
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
}
for (r in 1:300) {
print(r);
if (var(as.numeric(mean.scores[r, 1:2])) == 0) {
pvalues <- c(pvalues, NA);
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
}
for (r in 1:300) {
if (var(as.numeric(mean.scores[r, 1:2])) == 0) {
pvalues <- c(pvalues, NA);
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
pvalues <- c(pvalues, ttest$p.value);
}
pvalues
df.pvalues <- as.data.frame(pvalues);
View(df.pvalues)
for (r in 1:300) {
if (var(as.numeric(mean.scores[r, 1:2])) == 0) {
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
pvalues <- c(pvalues, ttest$p.value);
}
df.pvalues <- as.data.frame(pvalues);
pvalues <- c()
for (r in 1:300) {
if (var(as.numeric(mean.scores[r, 1:2])) == 0) {
pvalues <- c(pvalues, NA);
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
pvalues <- c(pvalues, ttest$p.value);
}
df.pvalues <- as.data.frame(pvalues);
cbind(mean.scores, df.pvalues)
mean.scores <- cbind(mean.scores, df.pvalues)
pvalues <- c()
fdrs <- c()
for (r in 1:300) {
if (var(as.numeric(mean.scores[r, 1:2])) == 0) {
pvalues <- c(pvalues, NA);
fdrs <- c(fdr, NA)
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
pvalues <- c(pvalues, ttest$p.value);
false.discovery.rate <- fdr(ttest$p.value);
fdrs <- c(fdrs, false.discovery.rate);
}
pvalues <- c()
fdrs <- c()
for (r in 1:300) {
if (var(as.numeric(mean.scores[r, 1:2])) == 0) {
pvalues <- c(pvalues, NA);
fdrs <- c(fdr, NA)
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
pvalues <- c(pvalues, ttest$p.value);
false.discovery.rate <- FDR(ttest$p.value);
fdrs <- c(fdrs, false.discovery.rate);
}
seq(1:50)/1000
# 6.
library("stats")
pvalues <- c()
fdrs <- c()
for (r in 1:300) {
if (var(as.numeric(mean.scores[r, 1:2])) == 0) {
pvalues <- c(pvalues, NA);
fdrs <- c(fdr, NA)
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
pvalues <- c(pvalues, ttest$p.value);
false.discovery.rate <- p.adjust(ttest$p.value);
fdrs <- c(fdrs, false.discovery.rate);
}
pvalues <- c()
fdrs <- c()
for (r in 1:300) {
if (var(as.numeric(mean.scores[r, 1:2])) == 0) {
pvalues <- c(pvalues, NA);
fdrs <- c(fdrs, NA)
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
pvalues <- c(pvalues, ttest$p.value);
false.discovery.rate <- p.adjust(ttest$p.value, method="fdr");
fdrs <- c(fdrs, false.discovery.rate);
}
fdrs
df.fdrs <- as.data.frame(fdrs);
mean.scores <- cbind(mean.scores, df.pvalues, df.fdrs)
# 6.
library("stats")
mean.scores <- cbind(control.mean.scores, disease.mean.scores);
mean.scores$log2FC <- mean.scores$"mean alzheimer" - mean.scores$"mean control"
# 6.
library("stats")
pvalues <- c()
for (r in 1:300) {
if (var(as.numeric(mean.scores[r, 1:2])) == 0) {
pvalues <- c(pvalues, NA);
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
pvalues <- c(pvalues, ttest$p.value);
}
df.pvalues <- as.data.frame(pvalues);
mean.scores <- cbind(mean.scores, df.pvalues)
mean.scores <- cbind(control.mean.scores, disease.mean.scores);
mean.scores$log2FC <- mean.scores$"mean alzheimer" - mean.scores$"mean control"
# 6.
library("stats")
mean.scores$p_value <- t.test(c(mean.scores$"mean alzheimer"), mean.scores$"mean control")$p.value
pvalues <- c()
fdrs <- c()
for (r in 1:300) {
if (var(as.numeric(mean.scores[r, 1:2])) == 0) {
pvalues <- c(pvalues, NA);
fdrs <- c(fdrs, NA)
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
pvalues <- c(pvalues, ttest$p.value);
false.discovery.rate <- p.adjust(ttest$p.value, method="fdr");
fdrs <- c(fdrs, false.discovery.rate);
}
df.pvalues <- as.data.frame(pvalues);
df.fdrs <- as.data.frame(fdrs);
mean.scores <- cbind(mean.scores, df.pvalues, df.fdrs);
# 6.
library("stats")
mean.scores <- cbind(control.mean.scores, disease.mean.scores);
mean.scores$log2FC <- mean.scores$"mean alzheimer" - mean.scores$"mean control"
# 6.
library("stats")
pvalues <- c()
fdrs <- c()
for (r in 1:300) {
if (var(as.numeric(mean.scores[r, 1:2])) == 0) {
pvalues <- c(pvalues, NA);
fdrs <- c(fdrs, NA)
next;
}
ttest <- t.test(mean.scores[r, 1:2]);
pvalues <- c(pvalues, ttest$p.value);
false.discovery.rate <- p.adjust(ttest$p.value, method="fdr");
fdrs <- c(fdrs, false.discovery.rate);
}
df.pvalues <- as.data.frame(pvalues);
df.fdrs <- as.data.frame(fdrs);
mean.scores <- cbind(mean.scores, df.pvalues, df.fdrs);
for (s in 1:300) {
if (var(as.numeric(mean.scores[r, 3:4])) != 0) {
print(s);
}
}
for (s in 1:300) {
if (var(as.numeric(mean.scores[r, 4:5])) != 0) {
print(s);
}
}
s
# 6.1 -
pvalues.control <- c();
for (c in 1:300) {
if (var(log2.expr.control[-51,c]) == 0) {
pvalues.control <- c(pvalues.control, NA)
next;
}
pvalues.control <- c(pvalues.control, t.test(log2.expr.control[-51,c])$p.value);
}
df.pvalues.control <- t(as.data.frame(pvalues.control));
View(df.pvalues.control)
rownames(df.pvalues.control) <- "pvalue control";
colnames(df.pvalues.control) <- genes;
# 6.1 -
pvalues.control <- c();
for (c in 1:300) {
if (var(log2.expr.control[-51,c]) == 0) {
pvalues.control <- c(pvalues.control, NA)
next;
}
pvalues.control <- c(pvalues.control, t.test(log2.expr.control[-51,c])$p.value);
}
rownames(df.pvalues.control) <- genes;
rownames(df.pvalues.control) <- genes;
df.pvalues.control <- as.data.frame(pvalues.control);
rownames(df.pvalues.control) <- genes;
pvalues.disease <- c()
for (c in 1:300) {
if (var(log2.expr.disease[-51,c]) == 0) {
pvalues.disease <- c(pvalues.disease, NA);
next;
}
pvalues.disease <- c(pvalues.disease, t.test(log2.expr.disease[-51,c])$p.value);
}
df.pvalues.disease <- as.data.frame(pvalues.disease);
rownames(df.pvalues.disease) <- genes;
View(df.pvalues.disease)
mean.scores <- cbind(control.mean.scores, disease.mean.scores);
mean.scores$log2FC <- mean.scores$"mean alzheimer" - mean.scores$"mean control"
mean.scores <- cbind(mean.scores, df.pvalues.control, df.pvalues.disease);
View(log2.expr.disease)
View(df.pvalues.disease)
print(p.adjust(mean.scores[c, 4:5], method="fdr"))
for (c in 1:300) {
print(p.adjust(as.numeric(mean.scores[c, 4:5]), method="fdr"))
}
p.adjust(c(1,2,3), method="fdr")
p.adjust(c(0.9), method="fdr")
View(alz.expr.data)
View(log2.expr.data)
# 6.1 -
conditions
# 6.1 -
alz.condition.data
# 6.1 -
condition
# 6.1 -
as.factor(condition)
# 6.1 -
as.factor(condition)
dsq<-DESeqDataSetFromMatrix(alz.condition.data, DataFrame(factor.condition), ~ factor.condition)
factor.condition <- as.factor(condition);
# 6.1 -
library("DESeq2")
dsq<-DESeqDataSetFromMatrix(alz.condition.data, DataFrame(factor.condition), ~ factor.condition)
View(alz.condition.data)
condition
dsq<-DESeqDataSetFromMatrix(alz.condition.data, DataFrame(factor.condition), ~ factor.condition)
ncol(alz.condition.data)
View(alz.condition.data)
dsq<-DESeqDataSetFromMatrix(alz.expr.data, DataFrame(factor.condition), ~ factor.condition)
View(alz.expr.data)
dsq<-DESeqDataSetFromMatrix(round(alz.expr.data), DataFrame(factor.condition), ~ factor.condition)
View(mean.scores)
View(alz.expr.data)
View(log2.expr.data)
# 6.1 -
pvalues <- c();
for (r in 1:100) {
ttest <- t.test(log2.expr.data[r, 1:300])
}
# 6.1 -
pvalues <- c();
for (r in 1:100) {
ttest <- t.test(log2.expr.data[r, 1:300]);
pvalues <- c(pvalues, ttest$p.value);
}
pvalues
p.adjust(pvalues, method="fdr");
# 6.1 -
pvalues <- c();
fdrs <- c();
for (r in 1:100) {
ttest <- t.test(log2.expr.data[1:300, r]);
pvalues <- c(pvalues, ttest$p.value);
}
for (r in 1:100) {
ttest <- t.test(alz.expr.data[1:300, r]);
pvalues <- c(pvalues, ttest$p.value);
}
pvalues
# 6.1 -
pvalues <- c();
fdrs <- c();
for (r in 1:100) {
ttest <- t.test(alz.expr.data[1:300, r]);
pvalues <- c(pvalues, ttest$p.value);
}
pvalues
alz.expr.data[1:300, 1]
# 6.1 -
pvalues <- c();
fdrs <- c();
for (r in 1:300) {
ttest <- t.test(alz.expr.data[r, 1:100]);
pvalues <- c(pvalues, ttest$p.value);
}
pvalues
alz.expr.data[1, 1:100]
# 6.1 -
pvalues <- c();
fdrs <- c();
for (r in 1:300) {
ttest <- t.test(as.numeric(alz.expr.data[r, 1:100]));
pvalues <- c(pvalues, ttest$p.value);
}
pvalues
alz.expr.data[1, 1:100]
as.numeric(alz.expr.data[1, 1:100])
t.test(as.numeric(alz.expr.data[1, 1:100]))
pvalues
for (r in 1:300) {
ttest <- t.test(as.numeric(log2.expr.data[r, 1:100]));
pvalues <- c(pvalues, ttest$p.value);
}
for (r in 1:300) {
ttest <- t.test(as.numeric(log2.expr.data[1:100, r]));
pvalues <- c(pvalues, ttest$p.value);
}
pvalues
log2.expr.data$log2FC <- mean.scores$"mean alzheimer" - mean.scores$"mean control"
mean.scores$log2FC <- mean.scores$"mean alzheimer" - mean.scores$"mean control"
View(log2.expr.data)
# 2.2
log2.expr.data <- apply(X = alz.expr.data[1:300,], MARGIN=1, FUN=log2);
mean.scores$log2FC
df.log2FC <- as.data.frame(mean.scores$"mean alzheimer" - mean.scores$"mean control" )
View(df.log2FC)
colnames(df.log2FC) <- "Log2FC"
df.log2FC <- t(as.data.frame(mean.scores$"mean alzheimer" - mean.scores$"mean control" ))
rownames(df.log2FC) <- "Log2FC"
colnames(df.log2FC) <- genes;
log2.expr.data <- rbind(log2.expr.data, df.log2FC);
t.test(c(1,2,3,4,5))
t.test(c(1,2,3,4,5))$p.value
t.test(c(1,2,3,4,5))$p.value
p.adjust(t.test(c(1,2,3,4,5))$p.value)
p.adjust(t.test(c(1,2,3,4,5, 100 ,2, 3,09, 2001))$p.value)
t.test(c(1,2,3,4,5, 100 ,2, 3,09, 2001))$p.value
# 6.2 +
for (c in 1:300) {
t.test(log2.expr.data[c, 1:100])
}
# 6.2 +
for (c in 1:300) {
t.test(log2.expr.data[1:100, c])
}
# 6.2 +
pvalues <- c();
for (c in 1:300) {
ttest <- t.test(log2.expr.data[1:100, c]);
pvalues <- c(pvalues, ttest$p.value);
}
pvalues;
df.pvalues <- as.data.frame(pvalues);
View(df.pvalues)
df.pvalues <- t(as.data.frame(pvalues));
colnames(df.pvalues) <- genes;
log2.expr.data <- rbind(log2.expr.data, df.pvalues);
log2.expr.data$pvalues
log2.expr.data[102]
log2.expr.data[102,]
p.adjust(log2.expr.data[102,], method="fdr");
df.fdr <- t(as.data.frame(p.adjust(log2.expr.data[102,], method="fdr")));
View(df.fdr)
colnames(df.fdr) <- genes;
rownames(df.fdr) <- "p-adjusted";
log2.expr.data <- rbind(log2.expr.data, df.fdr);
t.log2.expr.data <- t(log2.expr.data);
View(t.log2.expr.data)
# 7
abs
# 7
abs(-1)
# 7
library("dplyr")
View(t.log2.expr.data)
filter(t.log2.expr.data, abs(Log2FC)>=0.3)
filter(t.log2.expr.data, Log2FC>=0.3)
filter(t.log2.expr.data, abs(t.log2.expr.data$Log2FC)>=0.3)
filter(t.log2.expr.data, abs(Log2FC)>=0.3 & p-adjusted<=0.8)
filter(t.log2.expr.data, abs(Log2FC) >= 0.3 & p-adjusted <= 0.8)
subset(t.log2.expr.data, abs(Log2FC) >= 0.3 & p-adjusted <= 0.8)
subset(t.log2.expr.data, p-adjusted <= 0.8)
subset(t.log2.expr.data, "p-adjusted" <= 0.8)
subset(t.log2.expr.data, abs("Log2FC") >= 0.3 & "p-adjusted" <= 0.8)
subset(t.log2.expr.data, "Log2FC" >= 0.3 & "p-adjusted" <= 0.8)
subset(t.log2.expr.data, abs(t.log2.expr.data$Log2FC) >= 0.3 & "p-adjusted" <= 0.8)
subset(t.log2.expr.data, "Log2FC" >= 0.3 & "p-adjusted" <= 0.8)
t.log2.expr.data$p-adjusted
subset(t.log2.expr.data, t.log2.expr.data[,101] >= 0.3 & "p-adjusted" <= 0.8)
subset(t.log2.expr.data, abs(t.log2.expr.data[,101]) >= 0.3 & "p-adjusted" <= 0.8)
df.condition <- as.data.frame(condition);
View(df.condition)
log2.expr.data <- cbind(log2.expr.data, df.condition);
df.deg <- subset(t.log2.expr.data, abs(t.log2.expr.data[,101]) >= 0.3 & "p-adjusted" <= 0.8)
View(df.deg)
subset(t.log2.expr.data, abs(t.log2.expr.data[,101]) >= 0.3 & "p-adjusted" <= 0.8)
subset(t.log2.expr.data,  "p-adjusted" <= 0.8)
View(t.log2.expr.data)
log2.expr.data <- rbind(log2.expr.data, df.fdr);
t.log2.expr.data <- t(log2.expr.data);
df.pvalues <- t(as.data.frame(pvalues));
colnames(df.pvalues) <- genes;
log2.expr.data <- rbind(log2.expr.data, df.pvalues);
View(log2.expr.data)
t.log2.expr.data <- t(log2.expr.data);
subset(t.log2.expr.data, abs(t.log2.expr.data[,101]) >= 0.3 & t.log2.expr.data[,103] <= 0.8)
subset(t.log2.expr.data, abs(t.log2.expr.data[,101]) >= 0.3)
subset(t.log2.expr.data, abs(t.log2.expr.data[,101]) >= 0.3 & t.log2.expr.data[,103] <= 0.8)
subset(t.log2.expr.data, abs(t.log2.expr.data[,101]) >= 0.3)
df.deg <- subset(t.log2.expr.data, abs(t.log2.expr.data[,101]) >= 0.3 & t.log2.expr.data[,103] <= 0.8)
df.deg <- subset(t.log2.expr.data, abs(t.log2.expr.data[,101]) >= 0.3 & t.log2.expr.data[,103] <= 0.8)[,1:100]
df.deg <- t(subset(t.log2.expr.data, abs(t.log2.expr.data[,101]) >= 0.3 & t.log2.expr.data[,103] <= 0.8)[,1:100])
df.deg <- cbind(df.deg, df.condition);
